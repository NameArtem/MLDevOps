name: DevOps for ML - Model Training (CI)

on:
  pull_request:
    branches:
    - master
    paths:
    - 'code/**'

jobs:
  train:
    name: Model Training
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@master
    
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Set up Python 3.7
      id: python_setup
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    
    - name: Install Dependencies
      id: dependencies_setup
      run: |
        python -m pip install --upgrade pip
        pip install -r 'aml_service/ci_cd/requirements.txt'
    
    - name: Create or Connect to Workspace
      id: workspace_setup
      run: |
        python 'aml_service/ci_cd/00-WorkSpace.py' --subscription-id ${{ secrets.SUBSCRIPTION_ID }} --workspace-name ${{ secrets.WORKSPACE_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --location ${{ secrets.LOCATION }} --friendly-name ${{ secrets.FRIENDLY_NAME }}
    
    - name: Create or Load Azure Machine Learning Compute
      id: amlcluster_setup
      run: |
        python 'aml_service/ci_cd/01-AttachAmlCluster.py'
    
    - name: Train Model
      id: model_training
      run: |
        python 'aml_service/ci_cd/10-Train.py'

    - name: comment PR
      id: comment_pr
      uses: machine-learning-apps/pr-comment@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: outputs/comments.txt
    
    - name: Evaluate and Register Model
      id: register_model
      run: |
        python 'aml_service/ci_cd/20-RegisterModel.py'
      env:
        RUN_ID: ${{ steps.model_training.outputs.run_id }}
        EXPERIMENT_NAME: ${{ steps.model_training.outputs.experiment_name }} 

    - name: Update Model Timeline
      id: portal_url
      run: |
        pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        echo "$(date),flame,\"$(cat outputs/comments.txt)\",experiment link,${{ steps.model_training.outputs.run_url }},git-commit,$git_hash,https://www.github.com/$GITHUB_REPOSITORY/pull/$pull_number" >> project/model_events.csv
          
    - name: Commit files
      run: |
        git config --local user.email awmatheson@gmail.com
        git config --local user.name awmatheson
        git checkout -b update-training
        git reset
        git add project/model_events.csv
        git commit -m "Add new training run"
        git push -f --set-upstream origin update-training
          
    - name: Open a PR
      uses: actions/github-script@0.5.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var fs = require('fs');
          github.pulls.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: 'Training Update',
                        head: 'update-training',
                        base: 'master',
                        body: `New training run`
                        })
